--- test.maude
--- Michal Pulpan

load icu.maude .


fmod TEST is
    protecting ICU .
    protecting PATIENT .

    --- define env

    op testPatientOne : -> Patient .
    eq testPatientOne = patient(1, "John", 20) .
    op testPatientOneSensorList : -> Sensors .

    op testPatientTwo : -> Patient .
    eq testPatientTwo = patient(2, "Jane", 25) .
    op testPatientTwoSensorList : -> Sensors .

    op testIcu1 : -> ICU .
    eq testIcu1 = icu("Psychiatric intensive care unit", pList(testPatientOne, pList)) .

    op testIcu2 : -> ICU .
    eq testIcu2 = icu("Trauma intensive care unit", pList(testPatientTwo, pList)) .

    op testIcus : -> ICUs .
    eq testIcus = icus(testIcu1, icus(testIcu2, icus)) .
    --- Test sensor 1
    op testSensor1 : -> Sensor .
    eq testSensor1 = sensor(1, "heartRate", 50.0, 150.0) .
    op patientOneWithSensor1 : -> Patient .
    eq patientOneWithSensor1 = attachSensor(testPatientOne, testSensor1, testPatientOneSensorList) .
    --- Test sensor 2
    op testSensor2 : -> Sensor .
    eq testSensor2 = sensor(2, "bloodPressureSystolic", 120.0, 129.0) .
    op patientOneWithSensor2 : -> Patient .
    eq patientOneWithSensor2 = attachSensor(testPatientOne, testSensor2, testPatientOneSensorList) .
    --- Test sensor 3
    op testSensor3 : -> Sensor .
    eq testSensor3 = sensor(3, "bloodPressureDiastolic", 80.0, 84.0) .
    op patientOneWithSensor3 : -> Patient .
    eq patientOneWithSensor3 = attachSensor(testPatientOne, testSensor3, testPatientOneSensorList) .
    --- Test sensor 4
    op testSensor4 : -> Sensor .
    eq testSensor4 = sensor(4, "temperature", 35.0, 37.0) .
    op patientTwoWithSensor4 : -> Patient .
    eq patientTwoWithSensor4 = attachSensor(testPatientTwo, testSensor4, testPatientTwoSensorList) .

    --- show usage
    --- get patient
    op getTestPatientOneName : -> PatientName .
    eq getTestPatientOneName = getName(testPatientOne) .
    --- get icu
    op getTestIcu1ByName : -> ICU .
    eq getTestIcu1ByName = getICU("Psychiatric intensive care unit", testIcus) .
    --- set sensor value
    op setTestSensor1Value : -> Sensor .
    eq setTestSensor1Value = setSensorValue( testSensor1, 100.0) . --- heart rate 100bpm
    op setTestSensor2Value : -> Sensor .
    eq setTestSensor2Value = setSensorValue( testSensor2, 150.0) . --- systolic blood pressure 150mmHg
    op setTestSensor3Value : -> Sensor .
    eq setTestSensor3Value = setSensorValue( testSensor3, 57.0) . --- diastolic blood pressure 57mmHg
    op setTestSensor4Value : -> Sensor .
    eq setTestSensor4Value = setSensorValue( testSensor4, 41.0) . --- body temperature 41Â°C
    --- get sensor status
    op getTestSensor1Status : -> Action .
    eq getTestSensor1Status = handleSensorValue( testSensor1, testPatientOne) . 
    op getTestSensor2Status : -> Action .
    eq getTestSensor2Status = handleSensorValue( testSensor2, testPatientOne) . 
    op getTestSensor3Status : -> Action .
    eq getTestSensor3Status = handleSensorValue( testSensor3, testPatientOne) . 
    op getTestSensor4Status : -> Action .
    eq getTestSensor4Status = handleSensorValue( testSensor4, testPatientTwo) . 

    --- perform actions
    op performTestSensor1Action : -> Action .
    eq performTestSensor1Action = performHeartRateAction( getTestSensor1Status) .

    op performTestSensor2Action : -> Action .
    eq performTestSensor2Action = performBloodPressureSystolicAction( getTestSensor2Status) .

    op performTestSensor3Action : -> Action .
    eq performTestSensor3Action = performBloodPressureDiastolicAction( getTestSensor3Status) .

    op performTestSensor4Action : -> Action .
    eq performTestSensor4Action = performTemperatureAction( getTestSensor4Status) .

endfm